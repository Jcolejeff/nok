---
import { CollectionEntry, getCollection } from "astro:content";
import { cn, url } from "lib/utils";

import TextFormat from "lib/helpers/TextFormat";

import Layout from "layouts/Layout.astro";
import { Circle } from "lucide-react";
import Fade from "react-reveal/Fade";
const resources = await getCollection("services");
export async function getStaticPaths() {
	const servicesList = await getCollection("services");
	return servicesList?.map((entry) => ({
		params: { slug: entry?.slug },
		props: { entry },
	}));
}

export const prerender = true;

interface Props {
	entry: CollectionEntry<"services">;
}

const { entry } = Astro.props;

const resource = entry.data;
---

<Layout darkNavBg title={`${resource.title} | NOK Animation and Studios `}>
	<main>
		<div
			class="relative h-[400px] w-full bg-cover bg-center bg-no-repeat md:h-[500px]"
			style={{
				background: `#F8FAFC url(${url(resource.heroImage)}) no-repeat fixed center / cover`,
			}}
		>
		</div>

		<section
			class="container relative flex w-full max-w-[1700px] flex-col gap-8 overflow-x-hidden bg-white px-container-base py-8 md:py-24 lg:px-container-lg xl:px-container-xl"
		>
			<!-- desktop screen picture -->

			<h1
				class="text-[1.3rem] font-[800] tracking-[0.0125rem] text-secondary-2 md:text-center md:text-[2.8rem] md:leading-[3.5rem]"
			>
				<TextFormat keywordClassName="text-primary-1" text={resource.title} keyword={"tool"} />
			</h1>
			<Fade bottom client:only>
				<h2
					class="text-[1.18rem] font-[700] leading-[2.5rem] text-opacity-[0.8] md:text-[2.1rem] md:leading-[3rem]"
				>
					{resource.subtitle}
				</h2>
			</Fade>

			<p
				class="text-[1.18rem] font-[500] leading-[2.5rem] text-opacity-[0.8] md:max-w-[70%] md:text-[1.3rem] md:leading-[2.8rem] xxl:text-[1.3rem]"
			>
				{resource.description}
			</p>
			<section class="grid rounded-lg md:grid-cols-[1fr]">
				{
					resource.listItems.map((item: any, index: number) => {
						return (
							<p class="text-[1rem] leading-[2.4rem] md:text-[1.3rem] md:leading-[3rem] xxl:text-[1.3rem]">
								<span>
									<Circle className="inline-block w-2 h-2 fill-black mr-2" size={16} />
								</span>{" "}
								{item.paragraph}
							</p>
						);
					})
				}
			</section>
		</section>

		<section class="grid rounded-lg md:grid-cols-[1fr]">
			{
				resource.imageSections.map((item: any, index: number) => {
					return (
						<div class="relative">
							<img src={url(item.image)} alt="" class="w-full filter " />
							<p class="absolute bottom-[20%] w-full text-center text-[1.3rem] leading-[2.4rem] text-white md:text-[2.54rem] md:leading-[3rem] xxl:text-[3.58rem]">
								{item.heading}
							</p>
						</div>
					);
				})
			}
		</section>
	</main>
</Layout>
